version: "3"

volumes:
  postgres-data:

services:
  web:
    build: .
    depends_on:
      postgresql:
        condition: service_healthy
    volumes:
      - ./:/app
      - ./fixtures/movies:/movies
      - ./fixtures/shows:/shows
    ports:
      - 4000:4000

  postgresql:
    image: bitnami/postgresql:14
    healthcheck:
      test: "exit 0"
    volumes:
      - postgres-data:/bitnami/postgresql
    ports:
      - 5432:5432
    environment:
      - POSTGRESQL_USERNAME=my_user
      - POSTGRESQL_PASSWORD=password123
      - POSTGRESQL_DATABASE=my_database

  test-web:
    build: .
    depends_on:
      postgresql:
        condition: service_healthy
      test-postgresql:
        condition: service_healthy
      test-radarr:
        condition: service_healthy
      test-sonarr:
        condition: service_healthy
    volumes:
      - ./:/app
      - ./fixtures/movies:/movies
      - ./fixtures/shows:/shows
    command: >
        bash -c "mix deps.get && mix ecto.create && mix test"

  test-postgresql:
    image: bitnami/postgresql:14
    healthcheck:
      test: "exit 0"
    environment:
      - POSTGRESQL_USERNAME=my_user
      - POSTGRESQL_PASSWORD=password123
      - POSTGRESQL_DATABASE=my_database

  test-radarr:
    image: mdhiggins/radarr-sma
    healthcheck:
      test: "exit 0"
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Pacific/Auckland
    volumes:
      - ./fixtures/radarr:/config
      - ./fixtures/movies:/movies
    ports:
      - 7878:7878

  test-sonarr:
    image: mdhiggins/sonarr-sma
    healthcheck:
      test: "exit 0"
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Pacific/Auckland
    volumes:
      - ./fixtures/sonarr:/config
      - ./fixtures/shows:/shows
    ports:
      - 8989:8989