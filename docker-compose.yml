version: "3.4"

services:
  web:
    build: .
    ports:
      - 4000:4000
    volumes:
      - ./:/app
      - ./fixtures/movies:/movies
      - ./fixtures/shows:/shows
    environment:
      - DB_USERNAME=my_user
      - DB_PASSWORD=my_password
      - DB_DATABASE=my_database
      - DB_HOSTNAME=postgresql
    depends_on:
      postgresql:
        condition: service_healthy
      radarr:
        condition: service_healthy
      sonarr:
        condition: service_healthy
    command: bash -c "mix ecto.migrate && mix phx.server"

  postgresql:
    image: bitnami/postgresql:14
    ports:
      - 5432:5432
    environment:
      - POSTGRESQL_USERNAME=my_user
      - POSTGRESQL_PASSWORD=my_password
      - POSTGRESQL_DATABASE=my_database
    healthcheck:
      test: "exit 0"

  radarr:
    image: lscr.io/linuxserver/radarr
    ports:
      - 7878:7878
    volumes:
      - ./fixtures/radarr:/config
      - ./fixtures/movies:/movies
    environment:
      - PUID=1000
      - PGID=1000
    healthcheck:
      test: "exit 0"

  sonarr:
    image: lscr.io/linuxserver/sonarr
    ports:
      - 8989:8989
    volumes:
      - ./fixtures/sonarr:/config
      - ./fixtures/shows:/shows
    environment:
      - PUID=1000
      - PGID=1000
    healthcheck:
      test: "exit 0"

  test:
    build: .
    volumes:
      - ./fixtures/movies:/movies
      - ./fixtures/shows:/shows
    environment:
      - DB_USERNAME=my_user
      - DB_PASSWORD=my_password
      - DB_DATABASE=my_database
      - DB_HOSTNAME=postgresql
    depends_on:
      postgresql:
        condition: service_healthy
      radarr:
        condition: service_healthy
      sonarr:
        condition: service_healthy
    command: bash -c "mix ecto.migrate && mix test"